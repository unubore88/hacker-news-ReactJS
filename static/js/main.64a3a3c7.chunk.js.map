{"version":3,"sources":["actions/ApiNewsAction.js","component/NewsList.jsx","component/SearchBar.jsx","App.jsx","reducers/newsReducer.js","reducers/rootReducer.js","store/store.js","index.js"],"names":["fetchNewsAction","urlRequest","dispatch","axios","get","then","reponse","type","payload","searchNewsAction","search","page","console","log","response","NewsList","useDispatch","news","useSelector","state","useEffect","newsList","hits","map","item","className","key","objectID","href","url","target","title","author","story_text","created_at","slice","substring","SearchBar","useState","searchInput","setSearchInput","setPage","nbPage","onSubmit","e","preventDefault","onChange","value","searchNewsByDate","disabled","onClick","setTimeout","App","id","initialState","getOnlyNews","data","nbPages","newsReducer","action","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.64a3a3c7.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport const fetchNewsAction = () => {\n  let page = 1;\n  let urlRequest = `https://hn.algolia.com/api/v1/search?query=&page=${page}`;\n  return function (dispatch) {\n    axios.get(urlRequest).then((reponse) => {\n      dispatch({ type: \"FETCH_NEWS\", payload: reponse });\n    });\n  };\n};\n\nexport const searchNewsAction = (search, page = 1) => {\n  let urlRequest = `https://hn.algolia.com/api/v1/search?query=${search}&page=${page}`;\n  console.log(urlRequest);\n  return function (dispatch) {\n    axios.get(urlRequest).then((response) => {\n      dispatch({ type: \"SEARCH_NEWS\", payload: response });\n    });\n  };\n};\n\nexport const searchNewsByDate = (search = \"\", page = 1) => {\n  return function (dispatch) {\n    axios\n      .get(\n        `https://hn.algolia.com/api/v1/search_by_date?query=${search}&page=${page}`\n      )\n      .then((response) => {\n        dispatch({ type: \"SEARCH_NEWS_BY_DATE\", payload: response });\n      });\n  };\n};\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchNewsAction } from \"../actions/ApiNewsAction\";\n\nconst NewsList = () => {\n  const dispatch = useDispatch();\n  const news = useSelector((state) => state.news);\n  useEffect(() => {\n    dispatch(fetchNewsAction());\n  }, []);\n  return (\n    <div>\n      {console.log(news.newsList)}\n      <ul>\n        {news.newsList.hits &&\n          news.newsList.hits.map((item) => {\n            return (\n              <li className=\"news news-box\" key={item.objectID}>\n                <a className=\"news-title\" href={item.url} target=\"_blank\">\n                  {item.title\n                    ? item.title\n                    : `${item.author} - ${\n                        item.story_text ? item.story_text : \"\"\n                      }`}\n                  {item.url ? ` - ðŸ”— ` : \"\"}\n                  <br />\n                </a>\n                <div className=\"news-info-title\">\n                  {item.author} -{\" \"}\n                  {`${item.created_at.slice(0, 10)} - ${item.created_at.slice(\n                    12,\n                    19\n                  )} - ${\n                    item.url\n                      ? `${item.url.substring(0, 40)}...`\n                      : \"url unavaible\"\n                  }`}\n                </div>\n              </li>\n            );\n          })}\n      </ul>\n    </div>\n  );\n};\n\nexport default NewsList;\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  searchNewsAction,\n  searchNewsByDate,\n  fetchNewsAction,\n} from \"../actions/ApiNewsAction\";\n\nconst SearchBar = () => {\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [page, setPage] = useState(0);\n\n  const dispatch = useDispatch();\n  const news = useSelector((state) => state.news);\n  let nbPage = news.newsList.nbPage;\n\n  const onChangeSearch = (e) => {\n    setSearchInput(e.target.value);\n    setPage(0);\n  };\n\n  const onClickPreviousPage = () => {\n    setPage(page - 1);\n    dispatch(searchNewsAction(searchInput, page));\n  };\n\n  const onClickNextPage = () => {\n    setTimeout(() => {\n      setPage(page + 1);\n    }, 200);\n\n    dispatch(searchNewsAction(searchInput, page));\n    console.log(page);\n  };\n\n  const onSelectSearch = (e) => {\n    if (e.target.value === \"pertinence\") {\n      console.log(e.target.value);\n      setPage(0);\n      dispatch(fetchNewsAction());\n    } else if (e.target.value === \"date\") {\n      console.log(e.target.value);\n      setPage(0);\n      dispatch(searchNewsByDate(searchInput, page));\n    }\n  };\n\n  const onSubmitSearch = (e) => {\n    e.preventDefault();\n    dispatch(searchNewsAction(searchInput));\n  };\n\n  return (\n    <div className=\"search-bar\">\n      {console.log(page)}\n      <h1>Hacker news</h1>\n      <form onSubmit={onSubmitSearch}>\n        <input onChange={onChangeSearch} type=\"text\" value={searchInput} />\n        <button type=\"submit\">Rechercher</button>\n        <select onChange={onSelectSearch}>\n          <option value=\"pertinence\">sort by pertinence</option>\n          <option value=\"date\">sort by date</option>\n        </select>\n      </form>\n      <div>\n        <button\n          disabled={page <= 0 ? true : false}\n          onClick={() => onClickPreviousPage()}\n        >\n          previous page\n        </button>\n        <button\n          disabled={page >= nbPage ? true : false}\n          onClick={() => onClickNextPage()}\n        >\n          next page\n        </button>\n        <p className=\"search-bar-page-info\">\n          page {page + 1} / {nbPage}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default SearchBar;\n","import React from \"react\";\nimport NewsList from \"./component/NewsList\";\nimport SearchBar from \"./component/SearchBar\";\n\nconst App = () => {\n  return (\n    <div id=\"block-page\">\n      <SearchBar />\n      <NewsList />\n    </div>\n  );\n};\n\nexport default App;\n","const initialState = {\n  newsList: [],\n};\n\nconst newsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"FETCH_NEWS\":\n      return { ...state, newsList: getOnlyNews(action.payload) };\n    case \"SEARCH_NEWS\":\n      return { ...state, newsList: getOnlyNews(action.payload) };\n    case \"SEARCH_NEWS_BY_DATE\":\n      return { ...state, newsList: getOnlyNews(action.payload) };\n    default:\n      return state;\n  }\n};\n\nconst getOnlyNews = (news) => {\n  return {\n    hits: news.data.hits,\n    nbPage: news.data.nbPages,\n  };\n};\n\nexport default newsReducer;\n","import { combineReducers } from \"redux\";\nimport newsReducer from \"./newsReducer\";\n\nconst rootReducer = combineReducers({\n  news: newsReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"../reducers/rootReducer\";\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\nimport \"./styles/styles.scss\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}